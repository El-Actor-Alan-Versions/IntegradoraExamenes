Index: src/main/webapp/Alumno/verExamenes.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<%@ page import=\"mx.edu.utez.integradiratjuans.model.Examen, mx.edu.utez.integradiratjuans.model.Clase\" %>\r\n<%@ page import=\"java.text.SimpleDateFormat\" %>\r\n<%@ page import=\"java.util.List\" %>\r\n<%@ page import=\"java.sql.Timestamp\" %>\r\n<%@ page import=\"mx.edu.utez.integradiratjuans.dao.ClaseDao\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"es\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Ver Exámenes</title>\r\n    <!-- Enlace a Bootstrap CSS -->\r\n    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n</head>\r\n<body>\r\n<div class=\"container mt-4\">\r\n    <h1 class=\"mb-4\">Exámenes Disponibles</h1>\r\n\r\n    <table class=\"table table-striped table-hover\">\r\n        <thead class=\"thead-dark\">\r\n        <tr>\r\n            <th>ID</th>\r\n            <th>Nombre</th>\r\n            <th>Fecha de Aplicación</th>\r\n            <th>Fecha de Cierre</th>\r\n            <th>Grado_Grupo</th>\r\n            <th>Realizar Examen</th>\r\n\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <%\r\n            List<Examen> examenes = (List<Examen>) request.getAttribute(\"examenes\");\r\n            List<Clase> clases = (List<Clase>) request.getAttribute(\"clases\");\r\n            ClaseDao  claseDao = new ClaseDao();\r\n            String grado_grupo = claseDao.getGrupoNameByIdClase((Integer) session.getAttribute(\"clase\"));\r\n\r\n            if (examenes != null && !examenes.isEmpty()) {\r\n                SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n                for (Examen examen : examenes) {\r\n                    Timestamp fechaAplicacion = examen.getFecha_aplicacion();\r\n                    Timestamp fechaCierre = examen.getFecha_cierre();\r\n                    String gradoGrupo = grado_grupo;\r\n\r\n                    if (clases != null) {\r\n                        for (Clase clase : clases) {\r\n                            if (clase.getId_clase() == examen.getId_clase()) {\r\n                                gradoGrupo = clase.getGradoGrupo();\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n        %>\r\n        <tr>\r\n            <td><%= examen.getId_examen() %></td>\r\n            <td><%= examen.getNombre() %></td>\r\n            <td><%= fechaAplicacion != null ? sdf.format(fechaAplicacion) : \"N/A\" %></td>\r\n            <td><%= fechaCierre != null ? sdf.format(fechaCierre) : \"N/A\" %></td>\r\n            <td><%= gradoGrupo %></td>\r\n            <td>\r\n                <form action=\"IniciarExamenServlet\" method=\"post\" class=\"d-inline\">\r\n                    <input type=\"hidden\" name=\"id_examen\" value=\"<%= examen.getId_examen() %>\">\r\n                    <button type=\"submit\" class=\"btn btn-success btn-sm\">Iniciar</button>\r\n                </form>\r\n            </td>\r\n        </tr>\r\n        <%\r\n            }\r\n        } else {\r\n        %>\r\n        <tr>\r\n            <td colspan=\"5\" class=\"text-center\">No hay exámenes disponibles</td>\r\n        </tr>\r\n        <%\r\n            }\r\n        %>\r\n        </tbody>\r\n    </table>\r\n\r\n    <a href=\"index.jsp\" class=\"btn btn-primary\">Volver al inicio</a>\r\n</div>\r\n\r\n<!-- Enlace a Bootstrap JS y dependencias (opcional) -->\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/Alumno/verExamenes.jsp b/src/main/webapp/Alumno/verExamenes.jsp
--- a/src/main/webapp/Alumno/verExamenes.jsp	
+++ b/src/main/webapp/Alumno/verExamenes.jsp	
@@ -59,7 +59,7 @@
             <td><%= fechaCierre != null ? sdf.format(fechaCierre) : "N/A" %></td>
             <td><%= gradoGrupo %></td>
             <td>
-                <form action="IniciarExamenServlet" method="post" class="d-inline">
+                <form action="CargarExamen" method="post" class="d-inline">
                     <input type="hidden" name="id_examen" value="<%= examen.getId_examen() %>">
                     <button type="submit" class="btn btn-success btn-sm">Iniciar</button>
                 </form>
Index: src/main/java/mx/edu/utez/integradiratjuans/dao/OpcionesDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mx.edu.utez.integradiratjuans.dao;\r\n\r\nimport mx.edu.utez.integradiratjuans.model.Opcion;\r\nimport mx.edu.utez.integradiratjuans.model.Preguntas;\r\nimport mx.edu.utez.integradiratjuans.utils.DatabaseConnectionManager;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class OpcionesDao {\r\n\r\n\r\n\r\n    public void insertarPreguntas(List<Preguntas> preguntas) throws SQLException {\r\n        String sqlPregunta = \"INSERT INTO Pregunta (pregunta, id_examen) VALUES (?, ?)\";\r\n        String sqlOpcion = \"INSERT INTO Opciones (opcion, id_pregunta, correcta) VALUES (?, ?, ?)\";\r\n\r\n        try (Connection connection = DatabaseConnectionManager.getConnection();\r\n             PreparedStatement stmtPregunta = connection.prepareStatement(sqlPregunta, PreparedStatement.RETURN_GENERATED_KEYS);\r\n             PreparedStatement stmtOpcion = connection.prepareStatement(sqlOpcion)) {\r\n\r\n            for (Preguntas pregunta : preguntas) {\r\n                // Insertar pregunta\r\n                stmtPregunta.setString(1, pregunta.getTexto());\r\n                stmtPregunta.setInt(2, pregunta.getIdExamen());\r\n\r\n                int affectedRows = stmtPregunta.executeUpdate();\r\n                if (affectedRows > 0) {\r\n                    try (var generatedKeys = stmtPregunta.getGeneratedKeys()) {\r\n                        if (generatedKeys.next()) {\r\n                            int idPregunta = generatedKeys.getInt(1);\r\n                            pregunta.setIdPregunta(idPregunta);\r\n\r\n                            // Insertar opciones para la pregunta\r\n                            for (var opcion : pregunta.getOpciones()) {\r\n                                stmtOpcion.setString(1, opcion.getOpcion());\r\n                                stmtOpcion.setInt(2, idPregunta);\r\n                                stmtOpcion.setBoolean(3, opcion.isCorrecta());\r\n                                stmtOpcion.addBatch();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Ejecutar las inserciones de opciones en batch\r\n            stmtOpcion.executeBatch();\r\n        }\r\n    }\r\n\r\n    private void insertarOpciones(Preguntas pregunta) throws SQLException {\r\n        String sql = \"INSERT INTO Opciones (opcion, id_pregunta, correcta) VALUES (?, ?, ?)\";\r\n\r\n        try (Connection connection = DatabaseConnectionManager.getConnection();\r\n             PreparedStatement statement = connection.prepareStatement(sql)) {\r\n\r\n            for (var opcion : pregunta.getOpciones()) {\r\n                statement.setString(1, opcion.getOpcion());\r\n                statement.setInt(2, pregunta.getIdPregunta());\r\n                statement.setBoolean(3, opcion.isCorrecta());\r\n                statement.addBatch();\r\n            }\r\n            statement.executeBatch();\r\n        }\r\n    }\r\n\r\n    public List<Opcion> getAll() {\r\n        List<Opcion> opciones = new ArrayList<>();\r\n        String query = \"SELECT * FROM Opciones\";\r\n\r\n        try (Connection con = DatabaseConnectionManager.getConnection();\r\n             PreparedStatement ps = con.prepareStatement(query)) {\r\n\r\n            ResultSet rs = ps.executeQuery();\r\n\r\n            while (rs.next()) {\r\n                Opcion opcion = new Opcion();\r\n                opcion.setIdOpcion(rs.getInt(\"id_opcion\"));\r\n                opcion.setOpcion(rs.getString(\"opcion\"));\r\n                opcion.setIdPregunta(rs.getInt(\"id_pregunta\"));\r\n                opcion.setCorrecta(rs.getBoolean(\"correcta\"));\r\n                opciones.add(opcion);\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n        return opciones;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/mx/edu/utez/integradiratjuans/dao/OpcionesDao.java b/src/main/java/mx/edu/utez/integradiratjuans/dao/OpcionesDao.java
--- a/src/main/java/mx/edu/utez/integradiratjuans/dao/OpcionesDao.java	
+++ b/src/main/java/mx/edu/utez/integradiratjuans/dao/OpcionesDao.java	
@@ -13,8 +13,7 @@
 
 public class OpcionesDao {
 
-
-
+    // Método para insertar preguntas y opciones
     public void insertarPreguntas(List<Preguntas> preguntas) throws SQLException {
         String sqlPregunta = "INSERT INTO Pregunta (pregunta, id_examen) VALUES (?, ?)";
         String sqlOpcion = "INSERT INTO Opciones (opcion, id_pregunta, correcta) VALUES (?, ?, ?)";
@@ -52,22 +51,35 @@
         }
     }
 
-    private void insertarOpciones(Preguntas pregunta) throws SQLException {
-        String sql = "INSERT INTO Opciones (opcion, id_pregunta, correcta) VALUES (?, ?, ?)";
+    // Método para obtener opciones por ID de pregunta
+    public List<Opcion> obtenerOpcionesPorPregunta(int idPregunta) {
+        List<Opcion> opciones = new ArrayList<>();
+        String query = "SELECT id_opcion, opcion, id_pregunta, correcta FROM Opciones WHERE id_pregunta = ?";
+
+        System.out.println("Ejecutando consulta: " + query + " con ID de pregunta: " + idPregunta);
 
         try (Connection connection = DatabaseConnectionManager.getConnection();
-             PreparedStatement statement = connection.prepareStatement(sql)) {
+             PreparedStatement ps = connection.prepareStatement(query)) {
 
-            for (var opcion : pregunta.getOpciones()) {
-                statement.setString(1, opcion.getOpcion());
-                statement.setInt(2, pregunta.getIdPregunta());
-                statement.setBoolean(3, opcion.isCorrecta());
-                statement.addBatch();
+            ps.setInt(1, idPregunta);
+            ResultSet rs = ps.executeQuery();
+
+            while (rs.next()) {
+                Opcion opcion = new Opcion();
+                opcion.setIdOpcion(rs.getInt("id_opcion"));
+                opcion.setOpcion(rs.getString("opcion"));
+                opcion.setIdPregunta(rs.getInt("id_pregunta"));
+                opcion.setCorrecta(rs.getBoolean("correcta"));
+                opciones.add(opcion);
             }
-            statement.executeBatch();
+            System.out.println("Opciones obtenidas para la pregunta ID " + idPregunta + ": " + opciones.size());
+        } catch (SQLException e) {
+            System.err.println("Error obteniendo opciones: " + e.getMessage());
         }
+        return opciones;
     }
 
+    // Método para obtener todas las opciones
     public List<Opcion> getAll() {
         List<Opcion> opciones = new ArrayList<>();
         String query = "SELECT * FROM Opciones";
Index: src/main/java/mx/edu/utez/integradiratjuans/dao/PreguntaDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mx.edu.utez.integradiratjuans.dao;\r\n\r\nimport mx.edu.utez.integradiratjuans.model.Opcion;\r\nimport mx.edu.utez.integradiratjuans.model.Preguntas;\r\nimport mx.edu.utez.integradiratjuans.utils.DatabaseConnectionManager;\r\n\r\nimport java.sql.*;\r\nimport java.util.List;\r\n\r\npublic class PreguntaDao {\r\n\r\n    public boolean insertarPregunta(Preguntas pregunta) {\r\n        String sqlPregunta = \"INSERT INTO Pregunta (pregunta, id_examen) VALUES (?, ?)\";\r\n        String sqlOpcion = \"INSERT INTO Opciones (opcion, id_pregunta, correcta) VALUES (?, ?, ?)\";\r\n\r\n        try (Connection conn = DatabaseConnectionManager.getConnection();\r\n             PreparedStatement pstmtPregunta = conn.prepareStatement(sqlPregunta, Statement.RETURN_GENERATED_KEYS);\r\n             PreparedStatement pstmtOpcion = conn.prepareStatement(sqlOpcion)) {\r\n\r\n            // Insertar la pregunta\r\n            pstmtPregunta.setString(1, pregunta.getTexto());\r\n            pstmtPregunta.setInt(2, pregunta.getIdExamen());\r\n            int affectedRows = pstmtPregunta.executeUpdate();\r\n\r\n            if (affectedRows == 0) {\r\n                return false;\r\n            }\r\n\r\n            // Obtener el ID generado para la pregunta\r\n            try (var generatedKeys = pstmtPregunta.getGeneratedKeys()) {\r\n                if (generatedKeys.next()) {\r\n                    int idPregunta = generatedKeys.getInt(1);\r\n                    pregunta.setIdPregunta(idPregunta);\r\n\r\n                    // Insertar las opciones\r\n                    for (Opcion opcion : pregunta.getOpciones()) {\r\n                        pstmtOpcion.setString(1, opcion.getOpcion());\r\n                        pstmtOpcion.setInt(2, idPregunta);\r\n                        pstmtOpcion.setBoolean(3, opcion.isCorrecta());\r\n                        pstmtOpcion.addBatch();\r\n                    }\r\n                    pstmtOpcion.executeBatch();\r\n                }\r\n            }\r\n            return true;\r\n\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public int getLastInsertedId() {\r\n        int id = -1;\r\n        String query = \"SELECT LAST_INSERT_ID()\";\r\n        try (Connection con = DatabaseConnectionManager.getConnection();\r\n             PreparedStatement ps = con.prepareStatement(query);\r\n             ResultSet rs = ps.executeQuery()) {\r\n            if (rs.next()) {\r\n                id = rs.getInt(1);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return id;\r\n    }\r\n\r\n    public int getIdExamen(int idPregunta){\r\n        int idExamen = -1;\r\n        String query = \"SELECT id_examen FROM Pregunta WHERE idPregunta = ?()\";\r\n        try (Connection con = DatabaseConnectionManager.getConnection();\r\n             PreparedStatement ps = con.prepareStatement(query);\r\n             ResultSet rs = ps.executeQuery()) {\r\n            if (rs.next()) {\r\n                idExamen = rs.getInt(1);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return idExamen;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/mx/edu/utez/integradiratjuans/dao/PreguntaDao.java b/src/main/java/mx/edu/utez/integradiratjuans/dao/PreguntaDao.java
--- a/src/main/java/mx/edu/utez/integradiratjuans/dao/PreguntaDao.java	
+++ b/src/main/java/mx/edu/utez/integradiratjuans/dao/PreguntaDao.java	
@@ -5,12 +5,13 @@
 import mx.edu.utez.integradiratjuans.utils.DatabaseConnectionManager;
 
 import java.sql.*;
+import java.util.ArrayList;
 import java.util.List;
 
 public class PreguntaDao {
 
     public boolean insertarPregunta(Preguntas pregunta) {
-        String sqlPregunta = "INSERT INTO Pregunta (pregunta, id_examen) VALUES (?, ?)";
+        String sqlPregunta = "INSERT INTO Pregunta (pregunta, id_examen, tipo_pregunta) VALUES (?, ?, ?)";
         String sqlOpcion = "INSERT INTO Opciones (opcion, id_pregunta, correcta) VALUES (?, ?, ?)";
 
         try (Connection conn = DatabaseConnectionManager.getConnection();
@@ -20,6 +21,7 @@
             // Insertar la pregunta
             pstmtPregunta.setString(1, pregunta.getTexto());
             pstmtPregunta.setInt(2, pregunta.getIdExamen());
+            pstmtPregunta.setString(3, pregunta.getTipo());
             int affectedRows = pstmtPregunta.executeUpdate();
 
             if (affectedRows == 0) {
@@ -50,6 +52,30 @@
         }
     }
 
+    public List<Preguntas> obtenerPreguntasPorExamen(int idExamen) {
+        List<Preguntas> preguntas = new ArrayList<>();
+        String query = "SELECT id_pregunta, pregunta, tipo_pregunta FROM Pregunta WHERE id_examen = ?";
+
+        try (Connection conn = DatabaseConnectionManager.getConnection();
+             PreparedStatement stmt = conn.prepareStatement(query)) {
+
+            stmt.setInt(1, idExamen);
+            ResultSet rs = stmt.executeQuery();
+
+            while (rs.next()) {
+                Preguntas pregunta = new Preguntas();
+                pregunta.setIdPregunta(rs.getInt("id_pregunta"));
+                pregunta.setTexto(rs.getString("pregunta"));
+                pregunta.setTipo(rs.getString("tipo_pregunta"));
+                preguntas.add(pregunta);
+            }
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+
+        return preguntas;
+    }
+
     public int getLastInsertedId() {
         int id = -1;
         String query = "SELECT LAST_INSERT_ID()";
Index: src/main/java/mx/edu/utez/integradiratjuans/controller/VistaPreviaServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mx.edu.utez.integradiratjuans.controller;\r\n\r\nimport jakarta.servlet.RequestDispatcher;\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport jakarta.servlet.http.HttpSession;\r\nimport mx.edu.utez.integradiratjuans.model.Opcion;\r\nimport mx.edu.utez.integradiratjuans.model.Preguntas;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n@WebServlet(\"/Docente/VistaPreviaServlet\")\r\npublic class VistaPreviaServlet extends HttpServlet {\r\n    private static final long serialVersionUID = 1L;\r\n\r\n    @Override\r\n    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\r\n        List<Preguntas> preguntas = new ArrayList<>();\r\n\r\n        // Recuperar el ID del examen desde la sesión\r\n        HttpSession session = request.getSession();\r\n        Integer idExamen = (Integer) session.getAttribute(\"idExamen\");\r\n\r\n        if (idExamen == null) {\r\n            request.setAttribute(\"errorMessage\", \"ID del examen no encontrado en la sesión.\");\r\n            request.getRequestDispatcher(\"error.jsp\").forward(request, response);\r\n            return;\r\n        }\r\n\r\n        request.setAttribute(\"idExamen\", idExamen);\r\n\r\n        int questionIndex = 0;\r\n        while (request.getParameter(\"questions[\" + questionIndex + \"].pregunta\") != null) {\r\n            String preguntaTexto = request.getParameter(\"questions[\" + questionIndex + \"].pregunta\");\r\n            String questionType = request.getParameter(\"questions[\" + questionIndex + \"].questionType\");\r\n\r\n            if (preguntaTexto == null || questionType == null) {\r\n                request.setAttribute(\"errorMessage\", \"Pregunta o tipo de pregunta no encontrados.\");\r\n                request.getRequestDispatcher(\"error.jsp\").forward(request, response);\r\n                return;\r\n            }\r\n\r\n            Preguntas pregunta = new Preguntas(preguntaTexto, questionType);\r\n\r\n            if (\"opcion_multiple\".equals(questionType) || \"varias_respuestas\".equals(questionType)) {\r\n                int optionIndex = 1;\r\n                while (request.getParameter(\"questions[\" + questionIndex + \"].option\" + optionIndex) != null) {\r\n                    String opcionTexto = request.getParameter(\"questions[\" + questionIndex + \"].option\" + optionIndex);\r\n                    boolean isCorrect = \"true\".equals(request.getParameter(\"questions[\" + questionIndex + \"].correctOption\" + optionIndex));\r\n                    if (opcionTexto != null) {\r\n                        pregunta.addOpcion(new Opcion(opcionTexto, isCorrect));\r\n                    }\r\n                    optionIndex++;\r\n                }\r\n            } else if (\"abierta\".equals(questionType)) {\r\n                String respuesta = request.getParameter(\"questions[\" + questionIndex + \"].openEndedAnswer\");\r\n                if (respuesta != null) {\r\n                    pregunta.setRespuesta(respuesta);\r\n                }\r\n            }\r\n\r\n            preguntas.add(pregunta);\r\n            questionIndex++;\r\n        }\r\n\r\n        request.setAttribute(\"preguntas\", preguntas);\r\n        RequestDispatcher dispatcher = request.getRequestDispatcher(\"vistaPrevia.jsp\");\r\n        dispatcher.forward(request, response);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/mx/edu/utez/integradiratjuans/controller/VistaPreviaServlet.java b/src/main/java/mx/edu/utez/integradiratjuans/controller/VistaPreviaServlet.java
--- a/src/main/java/mx/edu/utez/integradiratjuans/controller/VistaPreviaServlet.java	
+++ b/src/main/java/mx/edu/utez/integradiratjuans/controller/VistaPreviaServlet.java	
@@ -47,17 +47,28 @@
 
             Preguntas pregunta = new Preguntas(preguntaTexto, questionType);
 
+            // Manejo de opciones y verificación de respuestas correctas
             if ("opcion_multiple".equals(questionType) || "varias_respuestas".equals(questionType)) {
                 int optionIndex = 1;
-                while (request.getParameter("questions[" + questionIndex + "].option" + optionIndex) != null) {
+                while (true) {
                     String opcionTexto = request.getParameter("questions[" + questionIndex + "].option" + optionIndex);
-                    boolean isCorrect = "true".equals(request.getParameter("questions[" + questionIndex + "].correctOption" + optionIndex));
-                    if (opcionTexto != null) {
-                        pregunta.addOpcion(new Opcion(opcionTexto, isCorrect));
-                    }
+                    if (opcionTexto == null) {
+                        break; // Termina el bucle si ya no hay más opciones
+                    }
+
+                    // Obtener el valor del checkbox para determinar si es la respuesta correcta
+                    String isCorrectParam = request.getParameter("questions[" + questionIndex + "].correctOption" + optionIndex);
+                    boolean isCorrect = "on".equals(isCorrectParam); // Comparar con "on" o cualquier otro valor esperado
+
+                    // Imprimir para depuración
+                    System.out.println("Valor del checkbox (correctOption" + optionIndex + "): " + isCorrectParam);
+                    System.out.println("Es correcta: " + isCorrect);
+
+                    pregunta.addOpcion(new Opcion(opcionTexto, isCorrect));
                     optionIndex++;
                 }
-            } else if ("abierta".equals(questionType)) {
+            }
+            else if ("abierta".equals(questionType)) {
                 String respuesta = request.getParameter("questions[" + questionIndex + "].openEndedAnswer");
                 if (respuesta != null) {
                     pregunta.setRespuesta(respuesta);
Index: src/main/webapp/Docente/crearPreguntas.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>Crear Pregunta</title>\r\n    <!-- Bootstrap CSS -->\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n    <script>\r\n        // Muestra las opciones según el tipo de pregunta seleccionada\r\n        function showOptions(questionIndex) {\r\n            var questionType = document.getElementById(\"questionType\" + questionIndex).value;\r\n            var optionsDiv = document.getElementById(\"optionsDiv\" + questionIndex);\r\n            optionsDiv.innerHTML = \"\";\r\n\r\n            if (questionType == \"opcion_multiple\" || questionType == \"varias_respuestas\") {\r\n                var addOptionBtn = \"<button type='button' class='btn btn-secondary' onclick='addOption(\" + questionIndex + \")'>Agregar Opción</button>\";\r\n                optionsDiv.innerHTML = addOptionBtn;\r\n                // Añadir 4 opciones por defecto\r\n                addOption(questionIndex);\r\n                addOption(questionIndex);\r\n                addOption(questionIndex);\r\n                addOption(questionIndex);\r\n            } else if (questionType == \"abierta\") {\r\n                optionsDiv.innerHTML = \"<div class='form-group'><label>Respuesta:</label><input type='text' class='form-control' name='questions[\" + questionIndex + \"].openEndedAnswer' required></div>\";\r\n            } else if (questionType == \"verdadero_falso\") {\r\n                optionsDiv.innerHTML =\r\n                    \"<div class='form-check'><input type='radio' class='form-check-input' name='questions[\" + questionIndex + \"].correctOption' value='true' required> Verdadero</div>\" +\r\n                    \"<div class='form-check'><input type='radio' class='form-check-input' name='questions[\" + questionIndex + \"].correctOption' value='false' required> Falso</div>\";\r\n            }\r\n        }\r\n\r\n        // Añade una opción nueva para preguntas de opción múltiple\r\n        function addOption(questionIndex) {\r\n            var optionsDiv = document.getElementById(\"optionsDiv\" + questionIndex);\r\n            var numOptions = optionsDiv.getElementsByClassName('option').length + 1;\r\n            var newOption = document.createElement('div');\r\n            newOption.className = 'option form-group';\r\n            newOption.innerHTML =\r\n                \"<label>Opción \" + numOptions + \":</label>\" +\r\n                \"<input type='text' class='form-control' name='questions[\" + questionIndex + \"].option\" + numOptions + \"' required>\" +\r\n                \"<div class='form-check'><input type='checkbox' class='form-check-input' name='questions[\" + questionIndex + \"].correctOption\" + numOptions + \"'> Correcta</div>\";\r\n            optionsDiv.insertBefore(newOption, optionsDiv.lastElementChild);\r\n        }\r\n\r\n        // Añade una nueva pregunta al formulario\r\n        function addQuestion() {\r\n            var questionsDiv = document.getElementById(\"questionsDiv\");\r\n            var questionIndex = questionsDiv.getElementsByClassName('question').length;\r\n            var newQuestion = document.createElement('div');\r\n            newQuestion.className = 'question border p-3 my-3';\r\n            newQuestion.innerHTML =\r\n                \"<h3>Pregunta \" + (questionIndex + 1) + \"</h3>\" +\r\n                \"<div class='form-group'><label>Pregunta:</label>\" +\r\n                \"<textarea class='form-control' name='questions[\" + questionIndex + \"].pregunta' required></textarea></div>\" +\r\n                \"<div class='form-group'><label>Tipo de Pregunta:</label>\" +\r\n                \"<select id='questionType\" + questionIndex + \"' class='form-control' name='questions[\" + questionIndex + \"].questionType' onchange='showOptions(\" + questionIndex + \")' required>\" +\r\n                \"<option value=''>Seleccione el tipo de pregunta</option>\" +\r\n                \"<option value='opcion_multiple'>Opción Múltiple</option>\" +\r\n                \"<option value='abierta'>Abierta</option>\" +\r\n                \"<option value='varias_respuestas'>Varias Respuestas</option>\" +\r\n                \"<option value='verdadero_falso'>Verdadero/Falso</option>\" + // Opción Verdadero/Falso\r\n                \"</select></div>\" +\r\n                \"<div id='optionsDiv\" + questionIndex + \"'></div>\";\r\n            questionsDiv.appendChild(newQuestion);\r\n        }\r\n\r\n        // Inicializa la primera pregunta cuando la página carga\r\n        window.onload = function() {\r\n            addQuestion();\r\n        };\r\n    </script>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n    <h2>Crear Pregunta</h2>\r\n    <form action=\"VistaPreviaServlet\" method=\"post\">\r\n        <div id=\"questionsDiv\"></div>\r\n\r\n        <button type=\"button\" class=\"btn btn-primary my-3\" onclick=\"addQuestion()\">Agregar Pregunta</button>\r\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Vista Previa\">\r\n    </form>\r\n</div>\r\n<!-- Bootstrap JS y dependencias -->\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js\"></script>\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/Docente/crearPreguntas.jsp b/src/main/webapp/Docente/crearPreguntas.jsp
--- a/src/main/webapp/Docente/crearPreguntas.jsp	
+++ b/src/main/webapp/Docente/crearPreguntas.jsp	
@@ -39,7 +39,7 @@
             newOption.innerHTML =
                 "<label>Opción " + numOptions + ":</label>" +
                 "<input type='text' class='form-control' name='questions[" + questionIndex + "].option" + numOptions + "' required>" +
-                "<div class='form-check'><input type='checkbox' class='form-check-input' name='questions[" + questionIndex + "].correctOption" + numOptions + "'> Correcta</div>";
+                "<div class='form-check'><input type='checkbox'  class='form-check-input' name='questions[" + questionIndex + "].correctOption" + numOptions + "'> Correcta</div>";
             optionsDiv.insertBefore(newOption, optionsDiv.lastElementChild);
         }
 
